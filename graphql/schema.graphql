type Query {
  """
  Retrieve all onboarded sellers
  """
  getSellers(listSellersParams: ListSellersParams): PaginatedSellers
    @cacheControl(scope: PUBLIC, maxAge: LONG)
  """
  Retrieve paginated Invoices for a given seller
  """
  invoicesBySeller(
    sellerName: String!
    pagination: Pagination
    dates: Dates!
  ): [Invoice] @cacheControl(scope: PRIVATE, maxAge: LONG)
  """
  Retrieves an Invoice
  """
  getInvoice(id: String!): Invoice @cacheControl(scope: PRIVATE, maxAge: SHORT)
  """
  Retrieve marketplace dashboard in a date range
  """
  searchSellersDashboard(
    searchDashboardParams: SearchDashboardParams
  ): SearchResponse @cacheControl(scope: PUBLIC, maxAge: LONG)

  """
  Retrieve Statistics General to marketplace in a date range
  """
  searchStatisticsDashboard(
    searchStatsDashboardParams: SearchStatsDashboardParams
  ): SearchStatsResponse @cacheControl(scope: PUBLIC, maxAge: LONG)

  """
  Retrieve orders to seller
  """
  orders(searchOrdersParams: SearchOrdersParams): SearchOrdersResponse
    @cacheControl(scope: PUBLIC, maxAge: LONG)

  """
  Get data token
  """
  getToken(sellerId: ID!): GetTokenResponse
    @cacheControl(scope: PUBLIC, maxAge: LONG)
}

type Mutation {
  createToken(sellerId: ID!): CreateTokenResponse
  editToken(sellerId: ID!, tokenInput: TokenInput!): EditTokenResponse
  """
  Attempts to create an Invoice
  """
  createInvoice(invoiceData: InvoiceData!): String
}
